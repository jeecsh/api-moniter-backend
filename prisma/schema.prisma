// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String     @unique
  password  String
  role      String     @default("user")
  settings  Settings?
  endpoints Endpoint[]
  apiTests  ApiTest[]
  createdAt DateTime   @default(now())
}

model Settings {
  id                    Int      @id @default(autoincrement())
  user                  User     @relation(fields: [userId], references: [id])
  userId                String   @unique
  responseTimeThreshold Int      @default(200)
  testFrequency         Int      @default(5)
  emailNotifications    Boolean  @default(true)
  slackNotifications    Boolean  @default(false)
  notificationEmail     String   @default("")
  slackWebhookUrl       String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

model Endpoint {
  id                   Int      @id @default(autoincrement())
  user                 User     @relation(fields: [userId], references: [id])
  userId               String
  name                 String
  url                  String
  method               String
  headers              Json     @default("[]")
  requestBody          String?
  expectedResponseTime Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  // Add this line for the opposite relation
  apiTests ApiTest[] // Relation field to ApiTest
}

model ApiTest {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id])

  endpointId Int
  endpoint   Endpoint @relation(fields: [endpointId], references: [id])

  status       Int
  responseTime Int
  statusCode   Int
  createdAt    DateTime @default(now())
}
